name: Mlibc Compilation 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch 
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/README_zh.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/README_zh.md'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    runs-on: ubuntu-22.04
    name: ${{ matrix.legs.MLIBC_COMPILE }}
    strategy:
      fail-fast: false
      matrix:
       legs:
         -  MLIBC_COMPILE: "Mlibc Arm Compilation On Linux"
            ARCH: "arm"
            QEMU_BOARD: "qemu-vexpress-a9"

         -  MLIBC_COMPILE: "Mlibc AArch64 Compilation On Linux"
            ARCH: "aarch64"
            QEMU_BOARD: "qemu-virt-aarch64"

         -  MLIBC_COMPILE: "Mlibc RISCV32 Compilation On Linux"
            ARCH: "riscv32"
            QEMU_BOARD: "qemu-virt-riscv32"

         -  MLIBC_COMPILE: "Mlibc RISCV64 Compilation On Linux"
            ARCH: "riscv64"
            QEMU_BOARD: "qemu-virt-riscv64"

    steps:
      - uses: actions/checkout@v4
      - name: Install Arm ToolChains
        if: ${{ matrix.legs.ARCH == 'arm'}}
        shell: bash
        run: |
           wget -q https://github.com/RT-Thread/toolchains-ci/releases/download/v1.3/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
           sudo tar xjf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 -C /opt
           /opt/gcc-arm-none-eabi-10-2020-q4-major/bin/arm-none-eabi-gcc --version
           echo "MLIBC_TOOLCHAIN_CC=/opt/gcc-arm-none-eabi-10-2020-q4-major/bin/arm-none-eabi-gcc" >> $GITHUB_ENV
           echo "MLIBC_TOOLCHAIN_AR=/opt/gcc-arm-none-eabi-10-2020-q4-major/bin/arm-none-eabi-gcc-ar" >> $GITHUB_ENV

      - name: Install AArch64 ToolChains
        if: ${{ matrix.legs.ARCH == 'aarch64'}}
        shell: bash
        run: |
           wget -q https://github.com/RT-Thread/toolchains-ci/releases/download/v1.6/gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf.tar.xz
           sudo tar -xf gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf.tar.xz -C /opt
           /opt/gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf/bin/aarch64-none-elf-gcc --version
           echo "MLIBC_TOOLCHAIN_CC=/opt/gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf/bin/aarch64-none-elf-gcc" >> $GITHUB_ENV
           echo "MLIBC_TOOLCHAIN_AR=/opt/gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf/bin/aarch64-none-elf-ar" >> $GITHUB_ENV

      - name: Install RV32 ToolChains
        if: ${{ matrix.legs.ARCH == 'riscv32'}}
        shell: bash
        run: |
           wget -q https://github.com/hpmicro/riscv-gnu-toolchain/releases/download/2022.05.15/riscv32-unknown-elf-newlib-multilib_2022.05.15_linux.tar.gz
           sudo tar zxf riscv32-unknown-elf-newlib-multilib_2022.05.15_linux.tar.gz -C /opt
           /opt/riscv32-unknown-elf-newlib-multilib/bin/riscv32-unknown-elf-gcc --version
           echo "MLIBC_TOOLCHAIN_CC=/opt/riscv32-unknown-elf-newlib-multilib/bin/riscv32-unknown-elf-gcc" >> $GITHUB_ENV
           echo "MLIBC_TOOLCHAIN_AR=/opt/riscv32-unknown-elf-newlib-multilib/bin/riscv32-unknown-elf-ar" >> $GITHUB_ENV

      - name: Install RV64 ToolChains
        if: ${{ matrix.legs.ARCH == 'riscv64'}}
        shell: bash
        run: |
           wget -q https://github.com/RT-Thread/toolchains-ci/releases/download/v1.4/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14.tar.gz
           sudo tar zxf riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14.tar.gz -C /opt
           /opt/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14/bin/riscv64-unknown-elf-gcc --version
           echo "MLIBC_TOOLCHAIN_CC=/opt/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14/bin/riscv64-unknown-elf-gcc" >> $GITHUB_ENV
           echo "MLIBC_TOOLCHAIN_AR=/opt/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14/bin/riscv64-unknown-elf-ar" >> $GITHUB_ENV

      - name: Mlibc Make Compile
        shell: bash
        env:
          ARCH : ${{ matrix.legs.ARCH }}
          QEMU_BOARD : ${{ matrix.legs.QEMU_BOARD }}
        run: |
          make mlibc

      - name: Upload Mlibc Compilation
        uses: actions/upload-artifact@v4
        with:
          name: mlibc-${{ matrix.legs.ARCH }}.a
          path: ./build/${{ matrix.legs.ARCH }}/libmlibc.a
          if-no-files-found: error
          retention-days: 7